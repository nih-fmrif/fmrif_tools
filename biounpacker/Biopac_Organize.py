#!/usr/bin/env python# @Author: Benjamin E. Gutierrez, Dan Handwerker# @Date:   2016-05-03# @Last Modified by: Dan Handwerker# @Last Modified time: 2016-05-03"""This script takes a Biopac input file and outputs the file data in a 1D form."""import glob as globimport numpy as npimport argparseimport sysimport osdef CheckFiles(InputFile, OutputPrefix, Overwrite):    print("++ INFO [Main]: Checking for dependencies...")    fails = 0    try:        __import__("bioread")    except ImportError:        print("++ Error: Could not import module bioread")        fails += 1    if not os.path.isfile(InputFile):        print("++ Error: Input file not found: %s" % (InputFile))        fails += 1    if os.path.isfile(OutputPrefix + "_ECG.1D") and not Overwrite:        print("++ Error: Output file already exists and overwrite flag not given.")        fails += 1    if fails != 0:        print("++ Error: Requirements not satisfied.  Exiting...")        sys.exit()if __name__ == '__main__':    parser = argparse.ArgumentParser('Options')    parser.add_argument('-i',         dest = 'InputFile',    help = 'Input file from Biopac',      type=str, default='')    parser.add_argument('-o',         dest = 'OutputPrefix', help = 'Labeling prefix for output',  type=str, default='')    parser.add_argument('-overwrite', dest = 'Overwrite',    help = 'overwrite output files',       action='store_true')    parser.add_argument('-info',      dest = 'Info',         help = 'Output info and plots', action='store_true')    args = parser.parse_args()    CheckFiles(args.InputFile,args.OutputPrefix,args.Overwrite)    print("++ INFO [Main]: Reading in data")    import bioread    if args.Info:        print("++ INFO [Main]: Inputfile infomation...")        import matplotlib.pyplot as plt        AllFiles=(glob.glob("*.acq"))        AllFiles.sort()        for i in range(len(AllFiles)):            plt.figure()            data = bioread.read_file(AllFiles[i])            data_resp = np.array(data.channels[0].data,dtype=float)            plt.plot(data_resp)            plt.title(AllFiles[i])            plt.savefig("sample%s.png" % i)            plt.close()        sys.exit()    data           = bioread.read_file(args.InputFile)    data_resp      = np.array(data.channels[0].data,dtype=float)    data_ecg       = np.array(data.channels[1].data,dtype=float)    data_trigger   = np.array(data.channels[2].data,dtype=float)    if not os.path.isdir(os.path.dirname(args.OutputPrefix)):        os.mkdir(os.path.dirname(args.OutputPrefix))    np.savetxt(args.OutputPrefix+'_Resp.1D',    data_resp)    np.savetxt(args.OutputPrefix+'_ECG.1D',     data_ecg)    np.savetxt(args.OutputPrefix+'_Trigger.1D', data_trigger)    with open("readme.md", "a") as myfile:        myfile.write("%s  >>  %s\n" % (args.InputFile,args.OutputPrefix))    print("++ INFO [Main]: Done")